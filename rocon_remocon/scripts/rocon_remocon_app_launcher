#!/usr/bin/env python
##############################################################################
# Imports
##############################################################################
#system
import sys
import os
import subprocess
import time
import uuid
import signal
import string
import tempfile
#ros
import rospy
import rocon_utilities
import roslaunch.parent
#rocon message and service
from rocon_std_msgs.msg import Remapping
from rocon_std_msgs.msg import KeyValue

launch_path =os.path.join(os.path.dirname(os.path.abspath(__file__)),"../resources/launch/")

if __name__ =="__main__":

    print len(sys.argv)
    if len(sys.argv) < 6:
        print "more the arguments"
        sys.exit()
        
    print sys.argv
    
    remappings =[]
    
    pkg_name =sys.argv[1] #package_name
    launch_name =sys.argv[2] #launch_file_name
    service_name =sys.argv[3] #launch_file_name
    remappings_roles =sys.argv[4] #mapping roles pair
    parameters =sys.argv[5] #parameters pair
    
    if len(remappings_roles)>0:
        for k in remappings_roles.split(","):
            if k.find(':') ==-1:
                continue
                
            remap_from =k.split(":")[0]
            remap_to =k.split(":")[1]
            remappings.append(Remapping(remap_from,remap_to))

    full_path = rocon_utilities.find_resource(pkg_name,launch_name)
    launch_path =full_path[string.find(full_path, pkg_name)+len(pkg_name):string.find(full_path, launch_name)]   

    temp =tempfile.NamedTemporaryFile(mode='w+t', delete=False)
    data ='$(find '+pkg_name+')'+launch_path+launch_name
    #add parameters
    launch_text =""
    launch_text+='<launch>\n'
    launch_text+='    <group ns="/service/%s">\n'%(service_name)
    launch_text+='        <rosparam>%s</rosparam>\n'%(parameters)
    launch_text+='        <include file="%s"/>\n'%(data)
    launch_text+='    </group>\n'
    launch_text+='</launch>\n'    
    temp.write(launch_text)
    temp.close()  # unlink it later
    print launch_text
    _launch =roslaunch.parent.ROSLaunchParent(rospy.get_param("/run_id"),

                                                    [temp.name],
                                                    is_core=False,)    
    _launch._load_config()
    remap_size =len(remappings)
    for N in _launch.config.nodes:
        for k in remappings:
            N.remap_args.append([k.remap_from, k.remap_to])

    _launch.start()
    _launch.spin()
