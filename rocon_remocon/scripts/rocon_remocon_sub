#!/usr/bin/env python
#
# License: BSD
#   https://raw.github.com/robotics-in-concert/rocon_qt_gui/license/LICENSE
#
##############################################################################
# Imports
##############################################################################

import sys
import signal

from python_qt_binding.QtGui import QApplication
from python_qt_binding.QtCore import QTimer

import rocon_remocon

##############################################################################
# Globals
##############################################################################.

app = None
myapp = None

##############################################################################
# Methods
##############################################################################.


def signal_handler(signum, f):
    print "[sub] Interrupt"
    if signum == signal.SIGINT:
        myapp._uninit_role_list()
        app.exit(0)

##############################################################################
# Main
##############################################################################.

if __name__ == "__main__":
    signal.signal(signal.SIGINT, signal_handler)

    index = sys.argv[1]  # name
    name = sys.argv[2]  # ip
    ip = sys.argv[3]  # ip
    host_name = sys.argv[4]  # ip

    app = QApplication(sys.argv)

    # Let the interpreter run each 200 ms.
    timer = QTimer()
    timer.start(200)
    timer.timeout.connect(lambda: None)

    myapp = rocon_remocon.QInteractionsChooser(None, "Interactions Chooser", app, index, name, ip, host_name)
    app.exec_()
